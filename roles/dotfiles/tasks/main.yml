---
- name: dotfiles | make ~/.config
  file: path=~/.config state=directory

- name: dotfiles | make ~/.config/karabiner
  file: path=~/.config/karabiner state=directory

- name: dotfiles | symlink nvim to vim
  file: path=~/.config/nvim src=~/.vim state=link force=yes

- name: dotfiles | create backup directory
  file: path=~/.backups state=directory

- name: dotfiles | check for non-symlink originals
  command: test -e ~/{{ item }} -a ! -L ~/{{ item }}
  failed_when: original_check.rc > 1
  register: original_check
  with_items: '{{dotfile_files + dotfile_templates}}'
  changed_when: false

- name: dotfiles | backup originals
  command:
    mv ~/{{ item.0 }} ~/.backups/
    creates=~/.backups/{{ item.0 }}
    removes=~/{{ item.0 }}
  with_together:
    - '{{dotfile_files + dotfile_templates}}'
    - '{{original_check.results}}'
  when: item.1.rc == 0 # item exists and is not a symlink
  loop_control:
    label: '{{item.0}}'

- name: dotfiles | create symlinks
  file: src={{ ansible_env.PWD }}/roles/dotfiles/files/{{ item }}
        path=~/{{ item }}
        state=link
        force=yes
  with_items: '{{dotfile_files}}'

- name: dotfiles | prepare Karabiner config
  command: '{{ ansible_env.PWD }}/roles/dotfiles/support/karabiner.js'
  register: karabiner_config

# Note some nasty dependencies here between creating the symlinks (eg.
# effectively creating ~/mutt/config/) and then templating into it (eg.
# ~/.mutt/config/settings.mutt).
- name: dotfiles | create templates
  template: dest={{ ansible_env.HOME }}/{{ item }}
            mode={{ '0755' if item.endswith('.sh') else '0644' }}
            src={{ item }}
  with_items: '{{dotfile_templates}}'

# Provide an extension point for other roles to dump .zshenv stuff into.
- name: dotfiles | make ~/.zshenv.d
  file: path=~/.zshenv.d state=directory

# Make some directories required by configuration in the dotfiles; these should
# probably be separate roles.
- name: dotfiles | create auxiliary directories
  file: path={{ item }} state=directory
